OVERVIEW: Convert documentation markup, assets, and symbol information into a documentation archive.

When building documentation for source code, the 'convert' command is commonly invoked by other tools as part of a build workflow. Such build workflows can perform tasks to extract symbol graph information and may
infer values for 'docc' flags and options from other build configuration.

When building documentation for a catalog that only contain articles or tutorial content, interacting with the 'docc convert' command directly can be a good alternative to using DocC via a build workflow.

USAGE: docc convert [<catalog-path>] [--additional-symbol-graph-dir <symbol-graph-dir>]
       docc convert [<catalog-path>] [--additional-symbol-graph-dir <symbol-graph-dir>] [--output-dir <output-dir>]
       docc convert [<catalog-path>] [--additional-symbol-graph-dir <symbol-graph-dir>] [--output-dir <output-dir>] [<availability-options>] [<diagnostic-options>] [<source-repository-options>] [<hosting-options>] [<info-plist-fallbacks>] [<feature-flags>] [<other-options>]

INPUTS & OUTPUTS:
  <catalog-path>          Path to a '.docc' documentation catalog directory.
  --additional-symbol-graph-dir <additional-symbol-graph-dir>
                          A path to a directory of additional symbol graph files.
  -o, --output-path, --output-dir <output-path>
                          The location where the documentation compiler writes the built documentation.

AVAILABILITY OPTIONS:
  --platform <platform>   Specify information about the current release of a platform.
        Each platform's information is specified via separate "--platform" values using the following format: "name={platform name},version={semantic version}".
        Optionally, the platform information can include a 'beta={true|false}' component. If no beta information is provided, the platform is considered not in beta.

SOURCE REPOSITORY OPTIONS:
  --checkout-path <checkout-path>
                          The root path on disk of the repository's checkout.
  --source-service <source-service>
                          The source code service used to host the project's sources.
        Required when using '--source-service-base-url'. Supported values are 'github', 'gitlab', and 'bitbucket'.
  --source-service-base-url <source-service-base-url>
                          The base URL where the source service hosts the project's sources.
        Required when using '--source-service'. For example, 'https://github.com/my-org/my-repo/blob/main'.

HOSTING OPTIONS:
  --hosting-base-path <hosting-base-path>
                          The base path your documentation website will be hosted at.
        For example, if you deploy your site to 'example.com/my_name/my_project/documentation' instead of 'example.com/documentation', pass '/my_name/my_project' as the base path.
  --transform-for-static-hosting/--no-transform-for-static-hosting
                          Produce a DocC archive that supports static hosting environments. (default: --transform-for-static-hosting)

DIAGNOSTIC OPTIONS:
  --analyze               Include 'note'/'information' level diagnostics in addition to warnings and errors.
  --diagnostics-file, --diagnostics-output-path <diagnostics-file>
                          The location where the documentation compiler writes the diagnostics file.
        Specifying a diagnostic file path implies '--ide-console-output'.
  --diagnostic-filter, --diagnostic-level <diagnostic-filter>
                          Filter diagnostics with a lower severity than this level.
        This option is ignored if `--analyze` is passed.

        This filter level is inclusive. If a level of 'note' is specified, diagnostics with a severity up to and including 'note' will be printed.
        The supported diagnostic filter levels are:
         - error
         - warning
         - note, info, information
         - hint, notice
  --ide-console-output, --emit-fixits
                          Format output to the console intended for an IDE or other tool to parse.
  --warnings-as-errors    Treat warnings as errors

INFO.PLIST FALLBACKS:
  --default-code-listing-language <default-code-listing-language>
                          A fallback default language for code listings if no value is provided in the documentation catalogs's Info.plist file.
  --fallback-display-name, --display-name <fallback-display-name>
                          A fallback display name if no value is provided in the documentation catalogs's Info.plist file.
        If no display name is provided in the catalogs's Info.plist file or via the '--fallback-display-name' option, DocC will infer a display name from the documentation catalog base name or from the module name
        from the symbol graph files provided via the '--additional-symbol-graph-dir' option.
  --fallback-bundle-identifier, --bundle-identifier <fallback-bundle-identifier>
                          A fallback bundle identifier if no value is provided in the documentation catalogs's Info.plist file.
        If no bundle identifier is provided in the catalogs's Info.plist file or via the '--fallback-bundle-identifier' option, DocC will infer a bundle identifier from the display name.
  --fallback-default-module-kind <fallback-default-module-kind>
                          A fallback default module kind if no value is provided in the documentation catalogs's Info.plist file.
        If no module kind is provided in the catalogs's Info.plist file or via the '--fallback-default-module-kind' option, DocC will display the module kind as a "Framework".

DOCUMENTATION COVERAGE (EXPERIMENTAL):
  --experimental-documentation-coverage
                          Generate documentation coverage output.
        Detailed documentation coverage information will be written to 'documentation-coverage.json' in the output directory.
  --coverage-summary-level <symbol-kind>
                          The level of documentation coverage information to write on standard out. (default: brief)
        The '--coverage-summary-level' level has no impact on the information in the 'documentation-coverage.json' file.
        The supported coverage summary levels are 'brief' and 'detailed'.
  --coverage-symbol-kind-filter <symbol-kind>
                          Filter documentation coverage to only analyze symbols of the specified symbol kinds.
        Specify a list of symbol kind values to filter the documentation coverage to only those types symbols.
        The supported symbol kind values are: associated-type, class, dictionary, enumeration, enumeration-case, function, global-variable, http-request, initializer, instance-method, instance-property,
        instance-subcript, instance-variable, module, operator, protocol, structure, type-alias, type-method, type-property, type-subscript, typedef

LINK RESOLUTION OPTIONS (EXPERIMENTAL):
  --dependency <dependency>
                          A path to a documentation archive to resolve external links against.
        Only documentation archives built with '--enable-experimental-external-link-support' are supported as dependencies.

FEATURE FLAGS:
  --experimental-enable-custom-templates
                          Allows for custom templates, like `header.html`.
  --enable-inherited-docs Inherit documentation for inherited symbols
  --allow-arbitrary-catalog-directories
                          Experimental: allow catalog directories without the `.docc` extension.
  --enable-experimental-external-link-support
                          Support external links to this documentation output.
        Write additional link metadata files to the output directory to support resolving documentation links to the documentation in that output directory.
  --emit-digest           Write additional metadata files to the output directory.
  --emit-lmdb-index       Writes an LMDB representation of the navigator index to the output directory.
        A JSON representation of the navigator index is emitted by default.

OPTIONS:
  -h, --help              Show help information.
